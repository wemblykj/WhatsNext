; Generic macro for WRx: Applies a mask (AND) and then ORs with static bits
; Usage: DMA_WRx param, mask, static
; Example: DMA_WRx %10000000, %11111100, %00000001

DMA_SRC_MEM equ 0x00 ; Port is memory
DMA_SRC_IO equ 0x01 ; Port is I/O

DMA_ADDRH_DEC equ 0x00 ; Address decrements
DMA_ADDRH_INC equ 0x01 ; Address increments
DMA_ADDRH_FIXED equ 0x02 ; Address is fixed

DMA_TIMING_4 equ 0x00 ; Timing 4 cycles
DMA_TIMING_3 equ 0x01 ; Timing 3 cycles
DMA_TIMING_2 equ 0x02 ; Timing 2 cycles

macro DMA_WRx param, mask, static
    db (param & mask) | static
endm

DMA_WR0_MASK    equ %01111100    ; Example mask: clear upper bit, keep next 5 bits, clear lower 2
DMA_WR0_STATIC  equ %00000001    ; Static bits to always set
DMA_WR0_LSB    equ 2            ; LSB position for WR0
DMA_WR1_MASK    equ %01111000    ; Example mask for WR1
DMA_WR1_STATIC  equ %00000100    ; Static bits for WR1
DMA_WR1_LSB    equ 3            ; LSB position for WR1
DMA_WR1_TIMING_MASK    equ %00000011    ; Example mask for WR1
DMA_WR1_TIMING_STATIC  equ %00000000    ; Static bits for WR1
DMA_WR1_TIMING_LSB    equ 0            ; LSB position for WR1
DMA_WR2_MASK    equ %01111000    ; Example mask for WR2
DMA_WR2_STATIC  equ %00000000    ; Static bits for WR2
DMA_WR2_LSB    equ 3            ; LSB position for WR2
DMA_WR3_MASK    equ %01000000    ; Example mask for WR3
DMA_WR3_STATIC  equ %10000000    ; Static bits for WR3
DMA_WR3_LSB    equ 6            ; LSB position for WR3
DMA_WR4_MASK    equ %01111100    ; Example mask for WR4
DMA_WR4_STATIC  equ %10000001    ; Static bits for WR4
DMA_WR4_LSB    equ 2            ; LSB position for WR4
DMA_WR5_MASK    equ %00110000    ; Example mask for WR5
DMA_WR5_LSB    equ 4            ; LSB position for WR5
DMA_WR5_STATIC  equ %10000010    ; Static bits for WR5
DMA_WR6_MASK    equ %01111100    ; Example mask for WR6
DMA_WR6_STATIC  equ %10000011    ; Static bits for WR6
DMA_WR6_LSB    equ 2            ; LSB position for WR6
DMA_WR6_READMASK_MASK equ %01111111 ; Example mask for read mask
DMA_WR6_READMASK_STATIC equ %10000000 ; Static bits for read mask

; Direction, operation and port A configuration
macro DMA_WR0_RAW param
    DMA_WRx (param << DMA_WR0_LSB), DMA_WR0_MASK, DMA_WR0_STATIC
endm

; Port A configuration
macro DMA_WR1_RAW param
    DMA_WRx (param << DMA_WR1_LSB), DMA_WR1_MASK, DMA_WR1_STATIC
endm

; Port B configuration
macro DMA_WR2_RAW param
    DMA_WRx (param << DMA_WR2_LSB), DMA_WR2_MASK, DMA_WR2_STATIC
endm

; Activation
macro DMA_WR3_RAW param
    DMA_WRx (param << DMA_WR3_LSB), DMA_WR3_MASK, DMA_WR3_STATIC
endm

; Port B, timing and interrupt configuration
macro DMA_WR4_RAW param
    DMA_WRx (param << DMA_WR4_LSB), DMA_WR4_MASK, DMA_WR4_STATIC
endm

; Ready and stop configuration
macro DMA_WR5_RAW param
    DMA_WRx (param << DMA_WR5_LSB), DMA_WR5_MASK, DMA_WR5_STATIC
endm

; Command register
macro DMA_WR6_RAW param
    DMA_WRx (param << DMA_WR6_LSB), DMA_WR6_MASK, DMA_WR6_STATIC
endm

; Direction, operation and port A configuration
; Usage: DMA_WR0 td, pa_lsb, pa_msb, bl_lsb, bl_msb
; Each parameter is 0 or 1 and will be placed in its bit position
; td: Transfer direction (0 or 1)
; pa_lsb: Port A LSB (0 or 1)
; pa_msb: Port A MSB (0 or 1)
; bl_lsb: Block length LSB (0 or 1)
; bl_msb: Block length MSB (0 or 1)
; Example: DMA_WR0 1, 0, 1, 0, 1
; This will create a WR0 command with the specified flags set in their respective bit positions.

macro DMA_WR0 td, pa_lsb, pa_msb, bl_lsb, bl_msb
    local param
    param = td | (pa_lsb << 1) | (pa_msb << 2) | (bl_lsb << 3) | (bl_msb << 4)
    DMA_WR0_RAW param
endm

; Port A configuration
macro DMA_WR1 src, addrh, enable_timing
    local param
    param = src | (addrh << 1) | (enable_timing << 3)
    DMA_WR1_RAW param
endm

; Port A variable timing
macro DMA_WR1_TIMING timing
    local param
    param = timing
    DMA_WRx param, DMA_WR1_TIMING_MASK, DMA_WR1_TIMING_STATIC
endm

; Port B configuration
macro DMA_WR2 td, pa_lsb, pa_msb, bl_lsb, bl_msb
    local param
    param = td | (pa_lsb << 1) | (pa_msb << 2) | (bl_lsb << 3) | (bl_msb << 4)
    DMA_WR2_RAW param
endm

; Port B variable timing
macro DMA_WR2_TIMING timing, prescaler
    local param
    param = timing | (prescaler << 5)
    DMA_WRx param, DMA_WR2_TIMING_MASK, DMA_WR2_TIMING_STATIC
endm

; Activation
macro DMA_WR3 enable
    local param
    param = enable << 6
    DMA_WR3_RAW param
endm

; Port B, timing and interrupt configuration
macro DMA_WR4 pa_lsb, pa_msb, mode
    local param
    param = (pa_lsb << 2) | (pa_msb << 3) | (mode << 5)
    DMA_WR4_RAW param
endm

; Ready and stop configuration
macro DMA_WR5 ready_config, stop_config
    local param
    param = (ready_config << 4) | (stop_config << 5)
    DMA_WR5_RAW param
endm

; Command register
macro DMA_WR6 command
    local param
    param = (command << 2)
    DMA_WR6_RAW param
endm

; Read mask
macro DMA_WR6_READMASK mask
    DMA_WRx mask, DMA_WR6_READMASK_MASK, DMA_WR6_READMASK_STATIC
endm